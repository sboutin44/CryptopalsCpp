The United States of America, also known as the USA, the United States, the U.S., the US and America, is a country consisting of 50 states, a federal district, five major self-governing territories, and various possessions. At 3.8 million square miles (9.8 million km2), it is the world's third- or fourth-largest country by total area. Most of the country is located in central North America between Canada and Mexico. With an estimated population of over 328 million, the U.S. is the third most populous country in the world after China and India. The capital is Washington, D.C., and the most populous city is New York City.

Paleo-Indians migrated from Siberia to the North American mainland at least 12,000 years ago. European colonization began in the 16th century. The United States emerged from the thirteen British colonies established along the East Coast. Numerous disputes between Great Britain and the colonies led to the American Revolutionary War lasting between 1775 and 1783, leading to independence. The United States embarked on a vigorous expansion across North America throughout the 19th century—gradually acquiring new territories, displacing Native Americans, and admitting new states—until 1848 when it spanned the continent.During the second half of the 19th century, the American Civil War led to the abolition of slavery in the United States. The Spanish–American War and World War I confirmed the country's status as a global military power.

The United States emerged from World War II as a global superpower. It was the first country to develop nuclear weapons and is the only country to have used them in warfare. During the Cold War, the United States and the Soviet Union competed in the Space Race, culminating with the 1969 Apollo 11 mission, the spaceflight that first landed humans on the Moon. The end of the Cold War and collapse of the Soviet Union in 1991 left the United States as the world's sole superpower.

The United States is a federal republic and a representative democracy. It is a founding member of the United Nations, World Bank, International Monetary Fund, Organization of American States (OAS), NATO, and other international organizations. It is a permanent member of the United Nations Security Council.

A highly developed country, the United States is the world's largest economy by nominal GDP, the second-largest by purchasing power parity, and accounts for approximately a quarter of global GDP. The United States is the world's largest importer and the second-largest exporter of goods, by value. Although its population is 4% of the world total, it holds 29.4% of the total wealth in the world, the largest share of global wealth concentrated in a single country. Despite income and wealth disparities, the United States continues to rank very high in measures of socioeconomic performance, including average wage, median income, median wealth, human development, per capita GDP, and worker productivity. It is the foremost military power in the world, making up more than a third of global military spending, and is a leading political, cultural, and scientific force internationally.

Etymology
The first known use of the name "America" dates back to 1507, when it appeared on a world map created by the German cartographer Martin Waldseemüller. The name on the map applied to the lands of South America, in honor of the Italian explorer Amerigo Vespucci (Latin: Americus Vespucius). After returning from his expeditions, Vespucci first postulated that the West Indies did not represent Asia's eastern limit, as initially thought by Columbus, but instead were part of an entirely separate landmass thus far unknown to the Europeans. Then in 1538, the Flemish cartographer Gerardus Mercator used the name "America" on his map of the world, applying it to the entire Western Hemisphere.

The first documentary evidence of the phrase "United States of America" is from a letter dated January 2, 1776, written by Stephen Moylan, Esq., to George Washington's aide-de-camp and Muster-Master General of the Continental Army, Lt. Col. Joseph Reed. Moylan expressed his wish to go "with full and ample powers from the United States of America to Spain" to seek assistance in the revolutionary war effort. The first known publication of the phrase "United States of America" was in an anonymous essay in The Virginia Gazette newspaper in Williamsburg, Virginia, on April 6, 1776.

The second draft of the Articles of Confederation, prepared by John Dickinson and completed by June 17, 1776, at the latest, declared "The name of this Confederation shall be the 'United States of America'". The final version of the Articles sent to the states for ratification in late 1777 contains the sentence "The Stile of this Confederacy shall be 'The United States of America'". In June 1776, Thomas Jefferson wrote the phrase "UNITED STATES OF AMERICA" in all capitalized letters in the headline of his "original Rough draught" of the Declaration of Independence. This draft of the document did not surface until June 21, 1776, and it is unclear whether it was written before or after Dickinson used the term in his June 17 draft of the Articles of Confederation.

The short form "United States" is also standard. Other common forms are the "U.S.", the "USA", and "America". Colloquial names are the "U.S. of A." and, internationally, the "States". "Columbia", a name popular in poetry and songs of the late 18th century, derives its origin from Christopher Columbus; it appears in the name "District of Columbia". Many landmarks and institutions in the Western Hemisphere bear his name, including the country of Colombia.

The phrase "United States" was originally plural, a description of a collection of independent states—e.g., "the United States are"—including in the Thirteenth Amendment to the United States Constitution, ratified in 1865. The singular form—e.g., "the United States is"—became popular after the end of the American Civil War. The singular form is now standard; the plural form is retained in the idiom "these United States". The difference is more significant than usage; it is a difference between a collection of states and a unit.

A citizen of the United States is an "American". "United States", "American" and "U.S." refer to the country adjectivally ("American values", "U.S. forces"). In English, the word "American" rarely refers to topics or subjects not directly connected with the United States.

History
Indigenous peoples and pre-Columbian history
It has been generally accepted that the first inhabitants of North America migrated from Siberia by way of the Bering land bridge and arrived at least 12,000 years ago; however, increasing evidence suggests an even earlier arrival. After crossing the land bridge, the first Americans moved southward along the Pacific coast and through an interior ice-free corridor between the Cordilleran and Laurentide ice sheets. The Clovis culture appeared around 11,000 BC, and is considered to be an ancestor of most of the later indigenous cultures of the Americas. The Clovis culture was believed to represent the first human settlement of the Americas. Over the years, more and more evidence has advanced the idea of "pre-Clovis" cultures including tools dating back about 15,550 years ago. It is likely these represent the first of three major waves of migrations into North America.

Over time, indigenous cultures in North America grew increasingly complex, and some, such as the pre-Columbian Mississippian culture in the southeast, developed advanced agriculture, grand architecture, and state-level societies. The Mississippian culture flourished in the south from 800 to 1600 AD, extending from the Mexican border down through Florida. Its city state Cahokia is considered the largest, most complex pre-Columbian archaeological site in the modern-day United States. In the Four Corners region, Ancestral Puebloans culture developed as the culmination of centuries of agricultural experimentation, which produced greater dependence on farming.

Three UNESCO World Heritage Sites in the United States are credited to the Pueblos: Mesa Verde National Park, Chaco Culture National Historical Park, and Taos Pueblo. The earthworks constructed by Native Americans of the Poverty Point culture in northeastern Louisiana have also been designated a UNESCO World Heritage site. In the southern Great Lakes region, the Iroquois Confederacy (Haudenosaunee) was established at some point between the twelfth and fifteenth centuries. Most prominent along the Atlantic cost were the Algonquian tribes, who practiced hunting and trapping, along with limited cultivation. The date of the first settlements of the Hawaiian Islands is a topic of continuing debate. Archaeological evidence seems to indicate a settlement as early as 124 AD.

Effects on and interaction with native populations
With the progress of European colonization in the territories of the contemporary United States, the Native Americans were often conquered and displaced. The native population of America declined after Europeans arrived, and for various reasons, primarily diseases such as smallpox and measles.

While estimating the original native population of North America at the time of European contact is difficult, an attempt was made in the early part of the twentieth century by James Mooney using historic records to estimate the indigenous population north of Mexico in 1600. In more recent years, Douglas H. Ubelaker of the Smithsonian Institution has updated these figures. While Ubelaker estimated that there was a population of 92,916 in the south Atlantic states and a population of 473,616 in the Gulf states, most academics regard the figure as too low. Anthropologist Henry F. Dobyns believed the populations were much higher, suggesting 1,100,000 along the shores of the gulf of Mexico, 2,211,000 people living between Florida and Massachusetts, 5,250,000 in the Mississippi Valley and tributaries and 697,000 people in the Florida peninsula.

In the early days of colonization, many European settlers were subject to food shortages, disease, and attacks from Native Americans. Native Americans were also often at war with neighboring tribes and allied with Europeans in their colonial wars. At the same time, however, many natives and settlers came to depend on each other. Settlers traded for food and animal pelts, natives for guns, ammunition and other European wares. Natives taught many settlers where, when and how to cultivate corn, beans, and squash. European missionaries and others felt it was important to "civilize" the Native Americans and urged them to adopt European agricultural techniques and lifestyles.

European settlements
With the advancement of European colonization in the territories of the contemporary United States, the Native Americans were often conquered and displaced. The first Europeans to arrive in the territory of the modern United States were Spanish conquistadors such as Juan Ponce de León, who made his first visit to Florida in 1513; however, if unincorporated territories are accounted for, then credit would go to Christopher Columbus who landed in Puerto Rico on his 1493 voyage. The Spanish set up the first settlements in Florida and New Mexico such as Saint Augustine and Santa Fe. The French established their own as well along the Mississippi River. Successful English settlement on the eastern coast of North America began with the Virginia Colony in 1607 at Jamestown and the Pilgrims' Plymouth Colony in 1620. Many settlers were dissenting Christian groups who came seeking religious freedom. The continent's first elected legislative assembly, Virginia's House of Burgesses created in 1619, the Mayflower Compact, signed by the Pilgrims before disembarking, and the Fundamental Orders of Connecticut, established precedents for the pattern of representative self-government and constitutionalism that would develop throughout the American colonies.

Most settlers in every colony were small farmers, but other industries developed within a few decades as varied as the settlements. Cash crops included tobacco, rice, and wheat. Extraction industries grew up in furs, fishing and lumber. Manufacturers produced rum and ships, and by the late colonial period, Americans were producing one-seventh of the world's iron supply. Cities eventually dotted the coast to support local economies and serve as trade hubs. English colonists were supplemented by waves of Scotch-Irish and other groups. As coastal land grew more expensive, freed indentured servants pushed further west.

A large-scale slave trade with English privateers was begun. The life expectancy of slaves was much higher in North America than further south, because of less disease and better food and treatment, leading to a rapid increase in the numbers of slaves. Colonial society was largely divided over the religious and moral implications of slavery, and colonies passed acts for and against the practice. But by the turn of the 18th century, African slaves were replacing indentured servants for cash crop labor, especially in southern regions.

With the establishment of the Province of Georgia in 1732, the 13 colonies that would become the United States of America were administered by the British as overseas dependencies. All nonetheless had local governments with elections open to most free men, with a growing devotion to the ancient rights of Englishmen and a sense of self-government stimulating support for republicanism. With extremely high birth rates, low death rates, and steady settlement, the colonial population grew rapidly. Relatively small Native American populations were eclipsed. The Christian revivalist movement of the 1730s and 1740s known as the Great Awakening fueled interest both in religion and in religious liberty.

During the Seven Years' War (in the United States, known as the French and Indian War), British forces seized Canada from the French, but the francophone population remained politically isolated from the southern colonies. Excluding the Native Americans, who were being conquered and displaced, the 13 British colonies had a population of over 2.1 million in 1770, about a third that of Britain. Despite continuing new arrivals, the rate of natural increase was such that by the 1770s only a small minority of Americans had been born overseas. The colonies' distance from Britain had allowed the development of self-government, but their success motivated monarchs to periodically seek to reassert royal authority.

In 1774, the Spanish Navy ship Santiago, under Juan Pérez, entered and anchored in an inlet of Nootka Sound, Vancouver Island, in present-day British Columbia. Although the Spanish did not land, natives paddled to the ship to trade furs for abalone shells from California. At the time, the Spanish were able to monopolize the trade between Asia and North America, granting limited licenses to the Portuguese. When the Russians began establishing a growing fur trading system in Alaska, the Spanish began to challenge the Russians, with Pérez's voyage being the first of many to the Pacific Northwest.

During his third and final voyage, Captain James Cook became the first European to begin formal contact with Hawaii. Captain Cook's last voyage included sailing along the coast of North America and Alaska searching for a Northwest Passage for approximately nine months.

Independence and expansion (1776–1865)
The American Revolutionary War was the first successful colonial war of independence against a European power. Americans had developed an ideology of "republicanism" asserting that government rested on the will of the people as expressed in their local legislatures. They demanded their rights as Englishmen and "no taxation without representation". The British insisted on administering the empire through Parliament, and the conflict escalated into war.

The Second Continental Congress unanimously adopted the Declaration of Independence, which recognized in a long preamble that their unalienable rights were not being protected by Great Britain. The fourth day of July is celebrated annually as Independence Day: "... where, heretofore, the words 'United Colonies' have been used, the stile be altered for the future to the 'United States'". In 1777, the Articles of Confederation established a decentralized government that operated until 1789.

Following the decisive Franco-American victory at Yorktown in 1781, Britain signed the peace treaty of 1783, and American sovereignty was internationally recognized and the country was granted all lands east of the Mississippi River. Nationalists led the Philadelphia Convention of 1787 in writing the United States Constitution, ratified in state conventions in 1788. The federal government was reorganized into three branches, on the principle of creating salutary checks and balances, in 1789. George Washington, who had led the Continental Army to victory, was the first president elected under the new constitution. The Bill of Rights, forbidding federal restriction of personal freedoms and guaranteeing a range of legal protections, was adopted in 1791.

Although the federal government criminalized the international slave trade in 1808, after 1820, cultivation of the highly profitable cotton crop exploded in the Deep South, and along with it, the slave population. The Second Great Awakening, especially 1800–1840, converted millions to evangelical Protestantism. In the North, it energized multiple social reform movements, including abolitionism; in the South, Methodists and Baptists proselytized among slave populations.

Americans' eagerness to expand westward prompted a long series of American Indian Wars. The Louisiana Purchase of French-claimed territory in 1803 almost doubled the nation's area. The War of 1812, declared against Britain over various grievances and fought to a draw, strengthened U.S. nationalism. A series of military incursions into Florida led Spain to cede it and other Gulf Coast territory in 1819. The expansion was aided by steam power, when steamboats began traveling along America's large water systems, many of which were connected by new canals, such as the Erie and the I&M; then, even faster railroads began their stretch across the nation's land.

From 1820 to 1850, Jacksonian democracy began a set of reforms which included wider white male suffrage; it led to the rise of the Second Party System of Democrats and Whigs as the dominant parties from 1828 to 1854. The Trail of Tears in the 1830s exemplified the Indian removal policy that forcibly resettled Indians into the west on Indian reservations. The U.S. annexed the Republic of Texas in 1845 during a period of expansionist Manifest destiny. The 1846 Oregon Treaty with Britain led to U.S. control of the present-day American Northwest. Victory in the Mexican–American War resulted in the 1848 Mexican Cession of California and much of the present-day American Southwest.The California Gold Rush of 1848–49 spurred migration to the Pacific coast, which led to the California Genocide and the creation of additional western states. After the American Civil War, new transcontinental railways made relocation easier for settlers, expanded internal trade and increased conflicts with Native Americans. For half a century, the rapidly declining buffalo struck an existential blow to many Plains Indians' culture. In 1869, a new Peace Policy nominally promised to protect Native-Americans from abuses, avoid further war, and secure their eventual U.S. citizenship. Nonetheless, large-scale conflicts continued throughout the West into the 1900s.

Civil War and Reconstruction era
Differences of opinion regarding the slavery of Africans and African Americans ultimately led to the American Civil War. Initially, states entering the Union had alternated between slave and free states, keeping a sectional balance in the Senate, while free states outstripped slave states in population and in the House of Representatives. But with additional western territory and more free-soil states, tensions between slave and free states mounted with arguments over federalism and disposition of the territories, whether and how to expand or restrict slavery.

With the 1860 election of Abraham Lincoln, the first president from the largely anti-slavery Republican Party, conventions in thirteen slave states ultimately declared secession and formed the Confederate States of America (the "South"), while the federal government (the "Union") maintained that secession was illegal. In order to bring about this secession, military action was initiated by the secessionists, and the Union responded in kind. The ensuing war would become the deadliest military conflict in American history, resulting in the deaths of approximately 618,000 soldiers as well as many civilians. The South fought for the freedom to own slaves, while the Union at first simply fought to maintain the country as one united whole. Nevertheless, as casualties mounted after 1863 and Lincoln delivered his Emancipation Proclamation, the main purpose of the war from the Union's viewpoint became the abolition of slavery. Indeed, when the Union ultimately won the war in April 1865, each of the states in the defeated South was required to ratify the Thirteenth Amendment, which prohibited slavery.

Three amendments were added to the U.S. Constitution in the years after the war: the aforementioned Thirteenth as well as the Fourteenth Amendment providing citizenship to the nearly four million African Americans who had been slaves, and the Fifteenth Amendment ensuring in theory that African Americans had the right to vote. The war and its resolution led to a substantial increase in federal power aimed at reintegrating and rebuilding the South while guaranteeing the rights of the newly freed slaves.

Reconstruction began in earnest following the war. While President Lincoln attempted to foster friendship and forgiveness between the Union and the former Confederacy, his assassination on April 14, 1865, drove a wedge between North and South again. Republicans in the federal government made it their goal to oversee the rebuilding of the South and to ensure the rights of African Americans. They persisted until the Compromise of 1877 when the Republicans agreed to cease protecting the rights of African Americans in the South in order for Democrats to concede the presidential election of 1876.

Southern white Democrats, calling themselves "Redeemers", took control of the South after the end of Reconstruction. From 1890 to 1910, so-called Jim Crow laws disenfranchised most blacks and some poor whites throughout the region. Blacks faced racial segregation, especially in the South. They also occasionally experienced vigilante violence, including lynching.

Further immigration, expansion, and industrialization
In the North, urbanization and an unprecedented influx of immigrants from Southern and Eastern Europe supplied a surplus of labor for the country's industrialization and transformed its culture. National infrastructure including telegraph and transcontinental railroads spurred economic growth and greater settlement and development of the American Old West. The later invention of electric light and the telephone would also affect communication and urban life.

The United States fought Indian Wars west of the Mississippi River from 1810 to at least 1890. Most of these conflicts ended with the cession of Native American territory and the confinement of the latter to Indian reservations. This further expanded acreage under mechanical cultivation, increasing surpluses for international markets. Mainland expansion also included the purchase of Alaska from Russia in 1867. In 1893, pro-American elements in Hawaii overthrew the monarchy and formed the Republic of Hawaii, which the U.S. annexed in 1898. Puerto Rico, Guam, and the Philippines were ceded by Spain in the same year, following the Spanish–American War. American Samoa was acquired by the United States in 1900 after the end of the Second Samoan Civil War. The United States purchased the U.S. Virgin Islands from Denmark in 1917.

Rapid economic development during the late 19th and early 20th centuries fostered the rise of many prominent industrialists. Tycoons like Cornelius Vanderbilt, John D. Rockefeller, and Andrew Carnegie led the nation's progress in railroad, petroleum, and steel industries. Banking became a major part of the economy, with J. P. Morgan playing a notable role. Edison and Tesla undertook the widespread distribution of electricity to industry, homes, and for street lighting. Henry Ford revolutionized the automotive industry. The American economy boomed, becoming the world's largest, and the United States achieved great power status. These dramatic changes were accompanied by social unrest and the rise of populist, socialist, and anarchist movements. This period eventually ended with the advent of the Progressive Era, which saw significant reforms in many societal areas, including women's suffrage, alcohol prohibition, regulation of consumer goods, greater antitrust measures to ensure competition and attention to worker conditions.

World War I, Great Depression, and World War II
The United States remained neutral from the outbreak of World War I in 1914 until 1917, when it joined the war as an "associated power", alongside the formal Allies of World War I, helping to turn the tide against the Central Powers. In 1919, President Woodrow Wilson took a leading diplomatic role at the Paris Peace Conference and advocated strongly for the U.S. to join the League of Nations. However, the Senate refused to approve this and did not ratify the Treaty of Versailles that established the League of Nations.

In 1920, the women's rights movement won passage of a constitutional amendment granting women's suffrage. The 1920s and 1930s saw the rise of radio for mass communication and the invention of early television. The prosperity of the Roaring Twenties ended with the Wall Street Crash of 1929 and the onset of the Great Depression. After his election as president in 1932, Franklin D. Roosevelt responded with the New Deal, which included the establishment of the Social Security system. The Great Migration of millions of African Americans out of the American South began before World War I and extended through the 1960s; whereas the Dust Bowl of the mid-1930s impoverished many farming communities and spurred a new wave of western migration.

At first effectively neutral during World War II while Germany conquered much of continental Europe, the United States began supplying materiel to the Allies in March 1941 through the Lend-Lease program. On December 7, 1941, the Empire of Japan launched a surprise attack on Pearl Harbor, prompting the United States to join the Allies against the Axis powers. Although Japan attacked the United States first, the U.S. nonetheless pursued a "Europe first" defense policy. The United States thus left its vast Asian colony, the Philippines, isolated and fighting a losing struggle against Japanese invasion and occupation, as military resources were devoted to the European theater. During the war, the United States was referred to as one of the "Four Policemen" of Allies power who met to plan the postwar world, along with Britain, the Soviet Union and China. Although the nation lost around 400,000 military personnel, it emerged relatively undamaged from the war with even greater economic and military influence.

The United States played a leading role in the Bretton Woods and Yalta conferences with the United Kingdom, the Soviet Union, and other Allies, which signed agreements on new international financial institutions and Europe's postwar reorganization. As an Allied victory was won in Europe, a 1945 international conference held in San Francisco produced the United Nations Charter, which became active after the war. The United States and Japan then fought each other in the largest naval battle in history in terms of gross tonnage sunk, the Battle of Leyte Gulf. The United States eventually developed the first nuclear weapons and used them on Japan in the cities of Hiroshima and Nagasaki; causing the Japanese to surrender on September 2, ending World War II. Parades and celebrations followed in what is known as Victory Day, or V-J Day.

Cold War and civil rights era
After World War II the United States and the Soviet Union competed for power, influence, and prestige during what became known as the Cold War, driven by an ideological divide between capitalism and communism and, according to the school of geopolitics, a divide between the maritime Atlantic and the continental Eurasian camps. They dominated the military affairs of Europe, with the U.S. and its NATO allies on one side and the USSR and its Warsaw Pact allies on the other. The U.S. developed a policy of containment towards the expansion of communist influence. While the U.S. and Soviet Union engaged in proxy wars and developed powerful nuclear arsenals, the two countries avoided direct military conflict.

The United States often opposed Third World movements that it viewed as Soviet-sponsored, and occasionally pursued direct action for regime change against left-wing governments, even supporting right-wing authoritarian governments at times. American troops fought communist Chinese and North Korean forces in the Korean War of 1950–53. The Soviet Union's 1957 launch of the first artificial satellite and its 1961 launch of the first manned spaceflight initiated a "Space Race" in which the United States became the first nation to land a man on the moon in 1969. A proxy war in Southeast Asia eventually evolved into full American participation, as the Vietnam War.

At home, the U.S. experienced sustained economic expansion and a rapid growth of its population and middle class. Construction of an Interstate Highway System transformed the nation's infrastructure over the following decades. Millions moved from farms and inner cities to large suburban housing developments. In 1959 Hawaii became the 50th and last U.S. state added to the country. The growing Civil Rights Movement used nonviolence to confront segregation and discrimination, with Martin Luther King Jr. becoming a prominent leader and figurehead. A combination of court decisions and legislation, culminating in the Civil Rights Act of 1968, sought to end racial discrimination. Meanwhile, a counterculture movement grew which was fueled by opposition to the Vietnam war, black nationalism, and the sexual revolution.

The launch of a "War on Poverty" expanded entitlements and welfare spending, including the creation of Medicare and Medicaid, two programs that provide health coverage to the elderly and poor, respectively, and the means-tested Food Stamp Program and Aid to Families with Dependent Children.

The 1970s and early 1980s saw the onset of stagflation. After his election in 1980, President Ronald Reagan responded to economic stagnation with free-market oriented reforms. Following the collapse of détente, he abandoned "containment" and initiated the more aggressive "rollback" strategy towards the USSR. After a surge in female labor participation over the previous decade, by 1985 the majority of women aged 16 and over were employed.

The late 1980s brought a "thaw" in relations with the USSR, and its collapse in 1991 finally ended the Cold War. This brought about unipolarity with the U.S. unchallenged as the world's dominant superpower. The concept of Pax Americana, which had appeared in the post-World War II period, gained wide popularity as a term for the post-Cold War new world order.

Contemporary history
After the Cold War, the conflict in the Middle East triggered a crisis in 1990, when Iraq under Saddam Hussein invaded and attempted to annex Kuwait, an ally of the United States. Fearing that the instability would spread to other regions, President George H. W. Bush launched Operation Desert Shield, a defensive force buildup in Saudi Arabia, and Operation Desert Storm, in a staging titled the Gulf War; waged by coalition forces from 34 nations, led by the United States against Iraq ending in the successful expulsion of Iraqi forces from Kuwait, restoring the former monarchy.

Originating within U.S. military defense networks, the Internet spread to international academic platforms and then to the public in the 1990s, greatly affecting the global economy, society, and culture. Due to the dot-com boom, stable monetary policy under Alan Greenspan, and reduced social welfare spending, the 1990s saw the longest economic expansion in modern U.S. history, ending in 2001. Beginning in 1994, the U.S. entered into the North American Free Trade Agreement (NAFTA), linking 450 million people producing $17 trillion worth of goods and services. The goal of the agreement was to eliminate trade and investment barriers among the U.S., Canada, and Mexico by January 1, 2008. Trade among the three partners has soared since NAFTA went into force.

On September 11, 2001, Al-Qaeda terrorists struck the World Trade Center in New York City and the Pentagon near Washington, D.C., killing nearly 3,000 people. In response, the United States launched the War on Terror, which included war in Afghanistan and the 2003–11 Iraq War. In 2007, the Bush administration ordered a major troop surge in the Iraq War, which successfully reduced violence and led to greater stability in the region.

Government policy designed to promote affordable housing, widespread failures in corporate and regulatory governance, and historically low interest rates set by the Federal Reserve led to the mid-2000s housing bubble, which culminated with the 2008 financial crisis, the largest economic contraction in the nation's history since the Great Depression. Barack Obama, the first African-American and multiracial president, was elected in 2008 amid the crisis, and subsequently passed stimulus measures and the Dodd-Frank Wall Street Reform and Consumer Protection Act in an attempt to mitigate its negative effects and ensure there would not be a repeat of the crisis. The stimulus facilitated infrastructure improvements and a relative decline in unemployment. Dodd-Frank improved financial stability and consumer protection, although there has been debate about its effects on the economy.

In 2010, the Obama administration passed the Affordable Care Act, which made the most sweeping reforms to the nation's healthcare system in nearly five decades, including mandates, subsidies and insurance exchanges. The law caused a significant reduction in the number and percentage of people without health insurance, with 24 million covered during 2016, but remains controversial due to its impact on healthcare costs, insurance premiums, and economic performance. Although the recession reached its trough in June 2009, voters remained frustrated with the slow pace of the economic recovery. The Republicans, who were opposed to Obama's policies, won control of the House of Representatives with a landslide in 2010 and control of the Senate in 2014.

American forces in Iraq were withdrawn in large numbers in 2009 and 2010, and the war in the region was declared formally over in December 2011. But months earlier, the government authorized the operation code-named Operation Neptune Spear, which was accomplished by United States Navy Seals and successfully killed the leader of Al-Qaeda Osama Bin Laden in Pakistan. The withdrawal caused an escalation of sectarian insurgency, leading to the rise of the Islamic State of Iraq and the Levant, the successor of al-Qaeda in the region. In 2014, Obama announced a restoration of full diplomatic relations with Cuba for the first time since 1961, though in June 2019, the Trump administration announced new restrictions on American travel to Cuba. In 2015, the United States as a member of the P5+1 countries signed the Joint Comprehensive Plan of Action, an agreement aimed to slow the development of Iran's nuclear program, though the U.S. withdrew from the deal in May 2018. In the United States presidential election of 2016, Republican Donald Trump was elected as the 45th president of the United States, making him both the oldest and wealthiest person elected president in the country's history.

Geography, climate, and environment
The land area of the entire United States is approximately 3,800,000 square miles (9,841,955 km2), with the contiguous United States making up 2,959,064 square miles (7,663,940.6 km2) of that. Alaska, separated from the contiguous United States by Canada, is the largest state at 663,268 square miles (1,717,856.2 km2). Hawaii, occupying an archipelago in the central Pacific, southwest of North America, is 10,931 square miles (28,311 km2) in area. The populated territories of Puerto Rico, American Samoa, Guam, Northern Mariana Islands, and U.S. Virgin Islands together cover 9,185 square miles (23,789 km2). Measured by only land area, the United States is third in size behind Russia and China, just ahead of Canada.

The United States is the world's third- or fourth-largest nation by total area (land and water), ranking behind Russia and Canada and just above or below China. The ranking varies depending on how two territories disputed by China and India are counted, and how the total size of the United States is measured. The Encyclopædia Britannica, for instance, lists the size of the United States as 3,677,649 square miles (9,525,067 km2), as they do not count the country's coastal or territorial waters. The World Factbook, which includes those waters, gives 3,796,742 square miles (9,833,517 km2).

The coastal plain of the Atlantic seaboard gives way further inland to deciduous forests and the rolling hills of the Piedmont. The Appalachian Mountains divide the eastern seaboard from the Great Lakes and the grasslands of the Midwest. The Mississippi–Missouri River, the world's fourth longest river system, runs mainly north–south through the heart of the country. The flat, fertile prairie of the Great Plains stretches to the west, interrupted by a highland region in the southeast.

The Rocky Mountains, at the western edge of the Great Plains, extend north to south across the country, reaching altitudes higher than 14,000 feet (4,300 m) in Colorado. Farther west are the rocky Great Basin and deserts such as the Chihuahua and Mojave. The Sierra Nevada and Cascade mountain ranges run close to the Pacific coast, both ranges reaching altitudes higher than 14,000 feet (4,300 m). The lowest and highest points in the contiguous United States are in the state of California, and only about 84 miles (135 km) apart. At an elevation of 20,310 feet (6,190.5 m), Alaska's Denali (Mount McKinley) is the highest peak in the country and North America. Active volcanoes are common throughout Alaska's Alexander and Aleutian Islands, and Hawaii consists of volcanic islands. The supervolcano underlying Yellowstone National Park in the Rockies is the continent's largest volcanic feature. The United States has the most ecoregions out of any country in the world.

The United States, with its large size and geographic variety, includes most climate types. To the east of the 100th meridian, the climate ranges from humid continental in the north to humid subtropical in the south. The Great Plains west of the 100th meridian are semi-arid. Much of the Western mountains have an alpine climate. The climate is arid in the Great Basin, desert in the Southwest, Mediterranean in coastal California, and oceanic in coastal Oregon and Washington and southern Alaska. Most of Alaska is subarctic or polar. Hawaii and the southern tip of Florida are tropical, as are the populated territories in the Caribbean and the Pacific. Extreme weather is not uncommon—the states bordering the Gulf of Mexico are prone to hurricanes, and most of the world's tornadoes occur in the country, mainly in Tornado Alley areas in the Midwest and South.

Wildlife
The U.S. ecology is megadiverse: about 17,000 species of vascular plants occur in the contiguous United States and Alaska, and more than 1,800 species of flowering plants are found in Hawaii, few of which occur on the mainland. The United States is home to 428 mammal species, 784 bird species, 311 reptile species, and 295 amphibian species. About 91,000 insect species have been described.

The bald eagle is both the national bird and national animal of the United States, and is an enduring symbol of the country itself.

There are 62 national parks and hundreds of other federally managed parks, forests, and wilderness areas, a total of 419 sites in total managed by the National Park Service. Altogether, the government owns about 28% of the country's land area. Most of this is protected, though some is leased for oil and gas drilling, mining, logging, or cattle ranching; about .86% is used for military purposes.

Environmental issues have been on the national agenda since 1970. Environmental controversies include debates on oil and nuclear energy, dealing with air and water pollution, the economic costs of protecting wildlife, logging and deforestation, and international responses to global warming. Many federal and state agencies are involved. The most prominent is the Environmental Protection Agency (EPA), created by presidential order in 1970. The idea of wilderness has shaped the management of public lands since 1964, with the Wilderness Act. The Endangered Species Act of 1973 is intended to protect threatened and endangered species and their habitats, which are monitored by the United States Fish and Wildlife Service.

Demographics
Population
The U.S. Census Bureau estimated the country's population to be 328,239,523 as of July 1, 2019, and to be adding one person (net gain) every 13 seconds, or about 6,646 people per day. The U.S. population almost quadrupled during the 20th century, from 76 million in 1900 to 281 million in 2000. The United States is the third most populous nation in the world, after China and India. A 2017 United Nations report projected that the U.S. would be one of nine countries in which world population growth through 2050 would be concentrated; the same report also noted that Nigeria would overtake the U.S. in population before 2050. A 2020 U.S. Census Bureau report projected the population of the country could be anywhere between 320 million and 447 million by 2060, depending on the rate of in-migration; in all projected scenarios, a lower fertility rate and increases in life expectancy would result in an aging population. In 1800 the average American woman had 7.04 children; by the first decade of the 1900s, this number had already decreased to 3.56. Since the early 1970s the birth rate has been below the replacement rate of 2.1 with 1.76 children per woman in 2017. Foreign-born immigration has caused the U.S. population to continue its rapid increase with the foreign-born population doubling from almost 20 million in 1990 to over 45 million in 2015, representing one-third of the population increase. In 2018, there were almost 90 million immigrants and U.S.-born children of immigrants (second-generation Americans) in the United States, accounting for 28% of the overall U.S. population. The United States has a very diverse population; 37 ancestry groups have more than one million members. German Americans are the largest ethnic group (more than 50 million)—followed by Irish Americans (circa 37 million), Mexican Americans (circa 31 million) and English Americans (circa 28 million).

White Americans (mostly European ancestry group with 73.1% of total population) are the largest racial group; black Americans are the nation's largest racial minority (note that in the U.S. Census, Hispanic and Latino Americans are counted as an ethnic group, not a "racial" group), and third-largest ancestry group. Asian Americans are the country's second-largest racial minority; the three largest Asian American ethnic groups are Chinese Americans, Filipino Americans, and Indian Americans. According to a 2015 survey, the largest American community with European ancestry is German Americans, which consists of more than 14% of the total population. In 2010, the U.S. population included an estimated 5.2 million people with some American Indian or Alaska Native ancestry (2.9 million exclusively of such ancestry) and 1.2 million with some native Hawaiian or Pacific island ancestry (0.5 million exclusively). The census counted more than 19 million people of "Some Other Race" who were "unable to identify with any" of its five official race categories in 2010, more than 18.5 million (97%) of whom are of Hispanic ethnicity.

The population growth of Hispanic and Latino Americans (the terms are officially interchangeable) is a major demographic trend. The 50.5 million Americans of Hispanic descent are identified as sharing a distinct "ethnicity" by the Census Bureau; 64% of Hispanic Americans are of Mexican descent. Between 2000 and 2010, the country's Hispanic population increased 43% while the non-Hispanic population rose just 4.9%.

The drop in the U.S. fertility rate from 2.08 per woman in 2007 to 1.76 in 2017 was mostly due to the declining birth rate of Hispanics, teenagers, and young women, although the birth rate for older women rose, below the replacement rate of 2.1. In 2018 the median age of the United States population was 38.1 years.

Minorities (as defined by the Census Bureau as all those beside non-Hispanic, non-multiracial whites) constituted 37% of the population in 2012 and over 50% of children under age one, and are projected to constitute the majority by 2044.

The United States has a birth rate of 13 per 1,000, which is five births below the world average. Its population growth rate is positive at 0.7%, higher than that of many developed nations. In fiscal year 2017, more than a million immigrants (most of whom entered through family reunification) were granted legal residence. In absolute numbers, the number of foreign-born U.S. residents is at a record high (44.4 million in 2017); however as a proportion of the overall population, the current foreign-born share (13.6% of the total population) is lower than the share at the peak in 1890 (14.8% of the total population). In 2017, out of the U.S. foreign-born population, some 45% (20.7 million) were naturalized citizens, 27% (12.3 million) were lawful permanent residents (including many eligible to become citizens), 6% (2.2 million) were temporary lawful residents, and 23% (10.5 million) were unauthorized immigrants.Among current living immigrants to the U.S., the top five counties of birth are Mexico (25% of immigrants), China (6%), India (6%), the Phillips (5%) and El Salvador (3%). Some 13% of current living immigrants come from Europe and Canada, and 10% from the Caribbean. Among new arrivals, Asian immigrants have been more numerous than Hispanic immigrants since 2010; in 2017, 37.4% of immigrant arrivals were Asian, and 26.6% were Hispanic. Until 2017 and 2018, the United States led the word in refugee resettlement for decades, admitted more refugees than the rest of the world combined. From fiscal year 1980 until 2017, 55% of refugees came from Asia, 27% from Europe, 13% from Africa, and 4% from Latin America, fleeing war and persecution.

A 2017 Gallup poll concluded that 4.5% of adult Americans identified as LGBT with 5.1% of women identifying as LGBT, compared with 3.9% of men. The highest percentage came from the District of Columbia (10%), while the lowest state was North Dakota at 1.7%.

Major population areas
The U.S. Census Bureau numerically ranks population areas by city, metropolitan statistical areas (MSAs), and larger combined statistical areas (CSAs).

About 82% of Americans live in urban areas (including suburbs); about half of those reside in cities with populations over 50,000. In 2008, 273 incorporated municipalities had populations over 100,000, nine cities had more than one million residents, and four global cities had over two million (New York, Los Angeles, Chicago, and Houston).

Estimates for the year 2018 show that 53 metropolitan areas have populations greater than one million. Many metros in the South, Southwest and West grew significantly between 2010 and 2018. The Dallas and Houston metros increased by more than a million people, while the Washington, D.C., Miami, Atlanta, and Phoenix metros all grew by more than 500,000 people.

In addition to official census groupings based on the aforementioned city, MSA, and CSA level, clusters of American cities can also be known as megaregions: the largest being the Great Lakes Megalopolis followed by the Northeast Megalopolis and Southern California.

Language
English (specifically, American English) is the de facto national language of the United States. Although there is no official language at the federal level, some laws—such as U.S. naturalization requirements—standardize English. In 2010, about 230 million, or 80% of the population aged five years and older, spoke only English at home. Spanish, spoken by 12% of the population at home, is the second most common language and the most widely taught second language. Some Americans advocate making English the country's official language, as it is in 32 states.

Both Hawaiian and English are official languages in Hawaii, by state law. Alaska recognizes twenty Native languages as well as English. South Dakota recognizes the Sioux language as an official language alongside English. While neither has an official language, New Mexico has laws providing for the use of both English and Spanish, as Louisiana does for English and French. Other states, such as California, mandate the publication of Spanish versions of certain government documents including court forms.

Several insular territories grant official recognition to their native languages, along with English: Samoan is officially recognized by American Samoa. Chamorro is an official language of Guam. Both Carolinian and Chamorro have official recognition in the Northern Mariana Islands.Spanish is an official language of Puerto Rico and is more widely spoken than English there.

The most widely taught foreign languages in the United States, in terms of enrollment numbers from kindergarten through university undergraduate education, are: Spanish (around 7.2 million students), French (1.5 million), and German (500,000). Other commonly taught languages (with 100,000 to 250,000 learners) include Latin, Japanese, ASL, Italian, and Chinese. 18% of all Americans claim to speak at least one language in addition to English.

Religion
The First Amendment of the U.S. Constitution guarantees the free exercise of religion and forbids Congress from passing laws respecting its establishment.

In a 2013 survey, 56% of Americans said religion played a "very important role in their lives", a far higher figure than that of any other Western nation. In a 2009 Gallup poll, 42% of Americans said they attended church weekly or almost weekly; the figures ranged from a low of 23% in Vermont to a high of 63% in Mississippi.

As with other Western countries, the U.S. is becoming less religious. Irreligion is growing rapidly among Americans under 30. Polls show that overall American confidence in organized religion has been declining since the mid to late 1980s, and that younger Americans, in particular, are becoming increasingly irreligious. According to a 2012 study, the Protestant share of the U.S. population had dropped to 48%, thus ending its status as religious category of the majority for the first time. Americans with no religion have 1.7 children compared to 2.2 among Christians. The unaffiliated are less likely to get married with 37% marrying compared to 52% of Christians.

According to a 2014 survey, 70.6% of adults in the United States identified themselves as Christians; Protestants accounted for 46.5%, while Roman Catholics, at 20.8%, formed the largest single denomination. In 2014, 5.9% of the U.S. adult population claimed a non-Christian religion. These include Judaism (1.9%), Islam (0.9%), Hinduism (0.7%), and Buddhism (0.7%). The survey also reported that 22.8% of Americans described themselves as agnostic, atheist or simply having no religion—up from 8.2% in 1990. There are also Unitarian Universalist, Scientologist, Baha'i, Sikh, Jain, Shinto, Zoroastrian, Confucian, Satanist, Taoist, Druid, Native American, Afro-American, traditional African, Wiccan, Gnostic, humanist and deist communities.

Protestantism is the largest Christian religious grouping in the United States, accounting for almost half of all Americans. Baptists collectively form the largest branch of Protestantism at 15.4%, and the Southern Baptist Convention is the largest individual Protestant denomination at 5.3% of the U.S. population. Apart from Baptists, other Protestant categories include nondenominational Protestants, Methodists, Pentecostals, unspecified Protestants, Lutherans, Presbyterians, Congregationalists, other Reformed, Episcopalians/Anglicans, Quakers, Adventists, Holiness, Christian fundamentalists, Anabaptists, Pietists, and multiple others. Two-thirds of American Protestants consider themselves to be born again. Roman Catholicism in the United States has its origin primarily in the Spanish and French colonization of the Americas, as well as in the English colony of Maryland. It later grew because of Irish, Italian, Polish, German and Hispanic immigration. Rhode Island has the highest percentage of Catholics, with 40 percent of the total population. Utah is the only state where Mormonism is the religion of the majority of the population. The Mormon Corridor also extends to parts of Arizona, California, Idaho, Nevada and Wyoming. Eastern Orthodoxy is claimed by 5% of people in Alaska, a former Russian colony, and maintains a presence on the U.S. mainland due to recent immigration from Eastern Europe. Finally, a number of other Christian groups are active across the country, including the Oneness Pentecostals, Jehovah's Witnesses, Restorationists, Churches of Christ, Christian Scientists, Unitarians and many others.

The Bible Belt is an informal term for a region in the Southern United States in which socially conservative evangelical Protestantism is a significant part of the culture and Christian church attendance across the denominations is generally higher than the nation's average. By contrast, religion plays the least important role in New England and in the Western United States.

Family structure
As of 2018, 52% of Americans age 15 and over were married, 6% were widowed, 10% were divorced, and 32% had never been married. Women now work mostly outside the home and receive the majority of bachelor's degrees.

The U.S. teenage pregnancy rate is 26.5 per 1,000 women. The rate has declined by 57% since 1991. Abortion is legal throughout the U.S., owing to Roe v. Wade, a 1973 landmark decision by the Supreme Court of the United States. While the abortion rate is falling, the abortion rates of 241 per 1,000 live births and 15 per 1,000 women aged 15–44, remain higher than most Western nations. In 2013, the average age at first birth was 26 and 41% of births were to unmarried women.

The total fertility rate (TFR) in 2016 was 1820.5 births per 1000 women. Adoption in the United States is common and relatively easy from a legal point of view (compared to other Western countries). As of 2001, with more than 127,000 adoptions, the U.S. accounted for nearly half of the total number of adoptions worldwide. Same-sex marriage is legal nationwide, owing to the Supreme Court's 2015 decision in Obergefell v. Hodges, and it is legal for same-sex couples to adopt. Polygamy is illegal throughout the U.S.

The U.S. has the world's highest rate of children living in single-parent households.

Health
The United States had a life expectancy of 78.6 years at birth in 2017, which was the third year of declines in life expectancy following decades of continuous increase. The recent decline, primarily among the age group 25 to 64, is largely due to sharp increases in the drug overdose and suicide rates; the country has one of the highest suicide rates among wealthy countries. Life expectancy was highest among Asians and Hispanics and lowest among blacks. According to CDC and Census Bureau data, deaths from suicide, alcohol and drug overdoses hit record highs in 2017. At the state/territory level, life expectancy ranges from 81.5 years at birth in Hawaii to 73.9 years at birth in American Samoa.

Increasing obesity in the United States and health improvements elsewhere contributed to lowering the country's rank in life expectancy from 11th in the world in 1987, to 42nd in 2007, and as of 2017 the country had the lowest life expectancy among 12 highly developed countries (it was higher in Japan, Canada, Australia, the UK, and seven countries of western Europe). Obesity rates have more than doubled in the last 30 years, are the highest in the industrialized world, and are among the highest anywhere. Approximately one-third of the adult population is obese and an additional third is overweight. Obesity-related type 2 diabetes is considered epidemic by health care professionals.

In 2010, coronary artery disease, lung cancer, stroke, chronic obstructive pulmonary diseases, and traffic accidents caused the most years of life lost in the U.S. Low back pain, depression, musculoskeletal disorders, neck pain, and anxiety caused the most years lost to disability. The most deleterious risk factors were poor diet, tobacco smoking, obesity, high blood pressure, high blood sugar, physical inactivity, and alcohol use. Alzheimer's disease, drug abuse, kidney disease, cancer, and falls caused the most additional years of life lost over their age-adjusted 1990 per-capita rates. U.S. teenage pregnancy and abortion rates are substantially higher than in other Western nations, especially among blacks and Hispanics.

The U.S. is a global leader in medical innovation. America solely developed or contributed significantly to nine of the top 10 most important medical innovations since 1975 as ranked by a 2001 poll of physicians, while the European Union and Switzerland together contributed to five. Since 1966, more Americans have received the Nobel Prize in Medicine than the rest of the world combined. From 1989 to 2002, four times more money was invested in private biotechnology companies in America than in Europe. The U.S. health-care system far outspends any other nation, measured both in per capita spending and as percentage of GDP.

Health-care coverage in the United States is a combination of public and private efforts and is not universal. In 2017, 12.2% of the population did not carry health insurance. The subject of uninsured and underinsured Americans is a major political issue. In 2006, Massachusetts became the first state to mandate universal health insurance. Federal legislation, passed in early 2010, roughly halved the uninsured share of the population, though the bill and its ultimate effect are issues of controversy.

In 2020 the United States became subject to the 2019 novel Coronavirus (COVID-19) global pandemic, with the first case reported on January 20, 2020. Although other counties have seen numerous cases, including China where the disease was first identified, the United States became the world's most affected country, with more than 85,500 confirmed cases, on March 27, 2020, when it overtook China and Italy.

Education
American public education is operated by state and local governments, regulated by the United States Department of Education through restrictions on federal grants. In most states, children are required to attend school from the age of six or seven (generally, kindergarten or first grade) until they turn 18 (generally bringing them through twelfth grade, the end of high school); some states allow students to leave school at 16 or 17.

About 12% of children are enrolled in parochial or nonsectarian private schools. Just over 2% of children are homeschooled. The U.S. spends more on education per student than any nation in the world, spending more than $11,000 per elementary student in 2010 and more than $12,000 per high school student. Some 80% of U.S. college students attend public universities.

Of Americans 25 and older, 84.6% graduated from high school, 52.6% attended some college, 27.2% earned a bachelor's degree, and 9.6% earned graduate degrees. The basic literacy rate is approximately 99%. The United Nations assigns the United States an Education Index of 0.97, tying it for 12th in the world.

Higher education
The United States has many competitive private and public institutions of higher education. The majority of the world's top universities listed by different ranking organizations are in the U.S. There are also local community colleges with generally more open admission policies, shorter academic programs, and lower tuition.

In 2018, U21, a network of research-intensive universities, ranked the United States first in the world for breadth and quality of higher education, and 15th when GDP was a factor.

As for public expenditures on higher education, the U.S. trails some other OECD nations but spends more per student than the OECD average, and more than all nations in combined public and private spending. As of 2018, student loan debt exceeded 1.5 trillion dollars, more than Americans owe on credit cards.

Government and politics
The United States is the world's oldest surviving federation. It is a representative democracy, "in which majority rule is tempered by minority rights protected by law". The government is regulated by a system of checks and balances defined by the U.S. Constitution, which serves as the country's supreme legal document. For 2018, the U.S. ranked 25th on the Democracy Index. On Transparency International's 2019 Corruption Perceptions Index its public sector position further deteriorated from a score of 76 in 2015 to 69 in 2019.

In the American federalist system, citizens are usually subject to three levels of government: federal, state, and local. The local government's duties are commonly split between county and municipal governments. In almost all cases, executive and legislative officials are elected by a plurality vote of citizens by district. There is no proportional representation at the federal level, and it is rare at lower levels.

The federal government comprises three branches:

Legislative: The bicameral Congress, made up of the Senate and the House of Representatives, makes federal law, declares war, approves treaties, has the power of the purse, and has the power of impeachment, by which it can remove sitting members of the government.
Executive: The president is the commander-in-chief of the military, can veto legislative bills before they become law (subject to Congressional override), and appoints the members of the Cabinet (subject to Senate approval) and other officers, who administer and enforce federal laws and policies.
Judicial: The Supreme Court and lower federal courts, whose judges are appointed by the president with Senate approval, interpret laws and overturn those they find unconstitutional.
The House of Representatives has 435 voting members, each representing a congressional district for a two-year term. House seats are apportioned among the states by population following each decennial census. Each state then draws single-member districts to conform with the census apportionment. At the 2010 census, seven states had the minimum of one representative, while California, the most populous state, had 53. The District of Columbia and the five major U.S. territories each have one member of Congress—these members are not allowed to vote.

The Senate has 100 members with each state having two senators, elected at-large to six-year terms; one-third of Senate seats are up for election every other year. The District of Columbia and the five major U.S. territories do not have senators. The president serves a four-year term and may be elected to the office no more than twice. The president is not elected by direct vote, but by an indirect electoral college system in which the determining votes are apportioned to the states and the District of Columbia. The Supreme Court, led by the chief justice of the United States, has nine members, who serve for life.

The state governments are structured in a roughly similar fashion; Nebraska uniquely has a unicameral legislature. The governor (chief executive) of each state is directly elected. Some state judges and cabinet officers are appointed by the governors of the respective states, while others are elected by popular vote.

The original text of the Constitution establishes the structure and responsibilities of the federal government and its relationship with the individual states. Article One protects the right to the "great writ" of habeas corpus. The Constitution has been amended 27 times; the first ten amendments, which make up the Bill of Rights, and the Fourteenth Amendment form the central basis of Americans' individual rights. All laws and governmental procedures are subject to judicial review and any law ruled by the courts to be in violation of the Constitution is voided. The principle of judicial review, not explicitly mentioned in the Constitution, was established by the Supreme Court in Marbury v. Madison (1803) in a decision handed down by Chief Justice John Marshall.

Political divisions
The United States is a federal republic of 50 states, a federal district, five territories and several uninhabited island possessions. The states and territories are the principal administrative districts in the country. These are divided into subdivisions of counties and independent cities. The District of Columbia is a federal district that contains the capital of the United States, Washington, D.C. The states and the District of Columbia choose the president of the United States. Each state has presidential electors equal to the number of their representatives and senators in Congress; the District of Columbia has three (because of the 23rd Amendment). Territories of the United States such as Puerto Rico do not have presidential electors, and so people in those territories cannot vote for the president.

The United States also observes tribal sovereignty of the American Indian nations to a limited degree, as it does with the states' sovereignty. American Indians are U.S. citizens and tribal lands are subject to the jurisdiction of the U.S. Congress and the federal courts. Like the states they have a great deal of autonomy, but also like the states, tribes are not allowed to make war, engage in their own foreign relations, or print and issue currency.

Citizenship is granted at birth in all states, the District of Columbia, and all major U.S. territories except American Samoa.

Parties and elections
The United States has operated under a two-party system for most of its history. For elective offices at most levels, state-administered primary elections choose the major party nominees for subsequent general elections. Since the general election of 1856, the major parties have been the Democratic Party, founded in 1824, and the Republican Party, founded in 1854. Since the Civil War, only one third-party presidential candidate—former president Theodore Roosevelt, running as a Progressive in 1912—has won as much as 20% of the popular vote. The president and vice president are elected through the Electoral College system.

In American political culture, the center-right Republican Party is considered "conservative" and the center-left Democratic Party is considered "liberal". The states of the Northeast and West Coast and some of the Great Lakes states, known as "blue states", are relatively liberal. The "red states" of the South and parts of the Great Plains and Rocky Mountains are relatively conservative.

Republican Donald Trump, the winner of the 2016 presidential election, is serving as the 45th president of the United States. Leadership in the Senate includes Republican vice president Mike Pence, Republican president pro tempore Chuck Grassley, Majority Leader Mitch McConnell, and Minority Leader Chuck Schumer. Leadership in the House includes Speaker of the House Nancy Pelosi, Majority Leader Steny Hoyer, and Minority Leader Kevin McCarthy.

In the 116th United States Congress, the House of Representatives is controlled by the Democratic Party and the Senate is controlled by the Republican Party, giving the U.S. a split Congress. The Senate consists of 53 Republicans, and 45 Democrats with two Independents who caucus with the Democrats; the House consists of 235 Democrats and 199 Republicans. In state governorships, there are 27 Republicans and 23 Democrats. Among the D.C. mayor and the five territorial governors, there are two Republicans, one Democrat, one New Progressive, and two Independents.

Foreign relations
The United States has an established structure of foreign relations. It is a permanent member of the United Nations Security Council and New York City is home to the United Nations Headquarters. It is a member of the G7, G20, and OECD. Almost all countries have embassies in Washington, D.C., and many have consulates around the country. Likewise, nearly all nations host American diplomatic missions. However, Iran, North Korea, Bhutan, and the Republic of China (Taiwan) do not have formal diplomatic relations with the United States (although the U.S. still maintains relations to Bhutan via it's embassy in India and also maintains unofficial relations with Taiwan and supplies it with military equipment).

The United States has a "Special Relationship" with the United Kingdom and strong ties with India, Canada, Australia, New Zealand, the Philippines, Japan, South Korea, Israel, and several European Union countries, including France, Italy, Germany, and Spain. It works closely with fellow NATO members on military and security issues and with its neighbors through the Organization of American States and free trade agreements such as the trilateral North American Free Trade Agreement with Canada and Mexico. In 2008, the United States spent a net $25.4 billion on official development assistance, the most in the world. As a share of America's large gross national income (GNI), however, the U.S. contribution of 0.18% ranked last among 22 donor states. By contrast, private overseas giving by Americans is relatively generous. Colombia is traditionally considered by the United States as its most loyal ally in South America. Policymakers in both countries consider Plan Colombia to be a foreign policy success for the United States.

The U.S. exercises full international defense authority and responsibility for three sovereign nations through Compact of Free Association with Micronesia, the Marshall Islands and Palau. These are Pacific island nations, once part of the U.S.-administered Trust Territory of the Pacific Islands after World War II, which gained independence in subsequent years.

Government finance
Taxes in the United States are levied at the federal, state, and local government levels. These include taxes on income, payroll, property, sales, imports, estates and gifts, as well as various fees. Taxation in the United States is based on citizenship, not residency. Both non-resident citizens and Green Card holders living abroad are taxed on their income irrespective of where they live or where their income is earned. It is the only country in the world, other than Eritrea, to do so.

In 2010 taxes collected by federal, state and municipal governments amounted to 24.8% of GDP. During FY2012, the federal government collected approximately $2.45 trillion in tax revenue, up $147 billion or 6% versus FY2011 revenues of $2.30 trillion. Primary receipt categories included individual income taxes ($1,132B or 47%), Social Security/Social Insurance taxes ($845B or 35%), and corporate taxes ($242B or 10%). Based on CBO estimates, under 2013 tax law the top 1% will be paying the highest average tax rates since 1979, while other income groups will remain at historic lows.

U.S. taxation has historically been generally progressive, especially the federal income taxes, though by most measures it became noticeably less progressive after 1980. It has sometimes been described as among the most progressive in the developed world, but this characterization is controversial. As of 2015, the highest 10% of income earners pay a majority of federal taxes, and about half of all taxes. Payroll taxes for Social Security are a flat regressive tax, with no tax charged on income above $118,500 (for 2015 and 2016) and no tax at all paid on unearned income from things such as stocks and capital gains. The historic reasoning for the regressive nature of the payroll tax is that entitlement programs have not been viewed as welfare transfers. However, according to the Congressional Budget Office the net effect of Social Security is that the benefit to tax ratio ranges from roughly 70% for the top earnings quintile to about 170% for the lowest earning quintile, making the system progressive.

The top 10% paid 51.8% of total federal taxes in 2009, and the top 1%, with 13.4% of pre-tax national income, paid 22.3% of federal taxes. In 2013 the Tax Policy Center projected total federal effective tax rates of 35.5% for the top 1%, 27.2% for the top quintile, 13.8% for the middle quintile, and −2.7% for the bottom quintile. The incidence of corporate income tax has been a matter of considerable ongoing controversy for decades. State and local taxes vary widely, but are generally less progressive than federal taxes as they rely heavily on broadly borne regressive sales and property taxes that yield less volatile revenue streams, though their consideration does not eliminate the progressive nature of overall taxation. For 2018, the effective tax rate for the wealthiest 400 households was 23%, compared to 24.2% for the bottom half of U.S. households.

During FY 2012, the federal government spent $3.54 trillion on a budget or cash basis, down $60 billion or 1.7% vs. FY 2011 spending of $3.60 trillion. Major categories of FY 2012 spending included: Medicare & Medicaid ($802B or 23% of spending), Social Security ($768B or 22%), Defense Department ($670B or 19%), non-defense discretionary ($615B or 17%), other mandatory ($461B or 13%) and interest ($223B or 6%).

The total national debt of the United States in the United States was $18.527 trillion (106% of the GDP) in 2014. The United States has the largest external debt in the world and the 14th largest government debt as a % of GDP in the world.

Military
The president is the commander-in-chief of the country's armed forces and appoints its leaders, the secretary of defense and the Joint Chiefs of Staff. The United States Department of Defense administers the armed forces, including the Army, Marine Corps, Navy, Air Force, and Space Force. The Coast Guard is run by the Department of Homeland Security in peacetime and by the Department of the Navy during times of war. In 2008, the armed forces had 1.4 million personnel on active duty. The Reserves and National Guard brought the total number of troops to 2.3 million. The Department of Defense also employed about 700,000 civilians, not including contractors.

Military service is voluntary, though conscription may occur in wartime through the Selective Service System. American forces can be rapidly deployed by the Air Force's large fleet of transport aircraft, the Navy's 11 active aircraft carriers, and Marine expeditionary units at sea with the Navy's Atlantic and Pacific fleets. The military operates 865 bases and facilities abroad, and maintains deployments greater than 100 active duty personnel in 25 foreign countries.

The military budget of the United States in 2011 was more than $700 billion, 41% of global military spending and equal to the next 14 largest national military expenditures combined. At 4.7% of GDP, the rate was the second-highest among the top 15 military spenders, after Saudi Arabia. U.S. defense spending as a percentage of GDP ranked 23rd globally in 2012 according to the CIA. Defense spending plays a major role in science and technology investment, with roughly half of U.S. federal research and development funded by the Department of Defense. Defense's share of the overall U.S. economy has generally declined in recent decades, from Cold War peaks of 14.2% of GDP in 1953 and 69.5% of federal outlays in 1954 to 4.7% of GDP and 18.8% of federal outlays in 2011.

The proposed base Department of Defense budget for 2012, $553 billion, was a 4.2% increase over 2011; an additional $118 billion was proposed for the military campaigns in Iraq and Afghanistan. The last American troops serving in Iraq departed in December 2011; 4,484 service members were killed during the Iraq War. Approximately 90,000 U.S. troops were serving in Afghanistan in April 2012; by November 8, 2013 2,285 had been killed during the War in Afghanistan.

The country is one of the five recognized nuclear weapons states and possesses the second largest stockpile of nuclear weapons in the world. More than 90% of world's 14,000 nuclear weapons are owned by Russia and the United States.

Law enforcement and crime
Law enforcement in the United States is primarily the responsibility of local police departments and sheriff's offices, with state police providing broader services. The New York Police Department (NYPD) is the largest in the country. Federal agencies such as the Federal Bureau of Investigation (FBI) and the U.S. Marshals Service have specialized duties, including protecting civil rights, national security and enforcing U.S. federal courts' rulings and federal laws. At the federal level and in almost every state, a legal system operates on a common law. State courts conduct most criminal trials while federal courts handle certain designated crimes as well as certain appeals from the state criminal courts.

A cross-sectional analysis of the World Health Organization Mortality Database from 2010 showed that United States "homicide rates were 7.0 times higher than in other high-income countries, driven by a gun homicide rate that was 25.2 times higher." Gun ownership rights continue to be the subject of contentious political debate. In 2016, the US murder rate of 5.4 per 100,000 was similar to the estimated global average of 5.15 per 100,000.

In 2017, there were 17,264 murders and the murder rate was 5.3 per 100,000. Regarding method of murder, 73% of murders were committed by firearm, 10% by knife and 17% by other means. The violent crime rose sharply in the 1960s until the early 1990s and declined in the late 1990s and 2000s. In 2014, the murder rate fell to the lowest level (4.5) since 1957 (4.0). The violent crime rate increased by 5.9% between 2014 and 2017 and the murder rate by 20.5%. Of those arrested for serious violent crimes in 2017, 58.5% were white, 37.5% were black, 2.1% were American Indian or Alaska Native and 1.5% Asian. Ethnically, 23.5% were Hispanic and 76.5% were non-Hispanic. Gun violence peaked in 1993 with 17,125 gun murders before declining to 9,527 in 1999 and steadily rising since to 12,772. Non-gun murders reached a peak in 1980 of 8,340 and declined in most years until the early 2010s with 4,668 in 2017. The rate of robberies declined 62% between 1990 and 2017.

From 1980 through 2008 males represented 77% of homicide victims and 90% of offenders. Blacks committed 52.5% of all homicides during that span, at a rate almost eight times that of whites ("whites" includes most Hispanics), and were victimized at a rate six times that of whites. Most homicides were intraracial, with 93% of black victims killed by blacks and 84% of white victims killed by whites. In 2012, Louisiana had the highest rate of murder and non-negligent manslaughter in the U.S., and New Hampshire the lowest. The FBI's Uniform Crime Reports estimates that there were 3,246 violent and property crimes per 100,000 residents in 2012, for a total of more than nine million total crimes.

Capital punishment is sanctioned in the United States for certain federal and military crimes, and also at the state level in 30 states. No executions took place from 1967 to 1977, owing in part to a U.S. Supreme Court ruling striking down arbitrary imposition of the death penalty. In 1976 the Court ruled that, under appropriate circumstances, capital punishment may constitutionally be imposed. Since the decision there have been more than 1,300 executions, a majority of these taking place in three states: Texas, Virginia, and Oklahoma. Meanwhile, several states have either abolished or struck down death-penalty laws. In 2015, the country had the fifth-highest number of executions in the world, following China, Iran, Pakistan and Saudi Arabia.

The United States has the highest documented incarceration rate and largest prison population in the world. As of 2020, the Prison Policy Initiative reported that there were some "2.3 million people in 1,833 state prisons, 110 federal prisons, 1,772 juvenile correctional facilities, 3,134 local jails, 218 immigration detention facilities, and 80 Indian Country jails as well as in military prisons, civil commitment centers, state psychiatric hospitals, and prisons in the U.S. territories." Between 1972 to 2009, there was nearly a 700% increase in the U.S. prison population, due largely to changes in sentencing guidelines and drug policies. State and local spending on prisons and jails grew three times as much as that spent on public education during the period 1980 to 2013. Since the peak in 2009, there has been a modest trend against incarceration, at the end of 2017, an estimated 1.4 million people were imprisoned in the United States, a decline of 7% from 2009. The imprisonment rate for all prisoners sentenced to more than a year in state or federal facilities is 478 per 100,000 in 2013 and the rate for pre-trial/remand prisoners is 153 per 100,000 residents in 2012. According to the Federal Bureau of Prisons, the majority of inmates held in federal prisons are convicted of drug offenses. About 9% of prisoners are held in privatized prisons, the practice of privately operated prisons began in the 1980s and has been a subject of debate. In 2018, Oklahoma had the highest incarceration rate (1,079 per 100,000 people), and Massachusetts the lowest (324 per 100,000 people). Among the U.S. territories, the highest incarceration rate was in the U.S. Virgin Islands (542 per 100,000 people) and the lowest was in Puerto Rico (313 per 100,000 people).

Economy
According to the International Monetary Fund, the U.S. GDP of $16.8 trillion constitutes 24% of the gross world product at market exchange rates and over 19% of the gross world product at purchasing power parity (PPP).

The nominal GDP of the U.S. is estimated to be $17.528 trillion as of 2014. From 1983 to 2008, U.S. real compounded annual GDP growth was 3.3%, compared to a 2.3% weighted average for the rest of the G7. The country ranks ninth in the world in nominal GDP per capita and sixth in GDP per capita at PPP. The U.S. dollar is the world's primary reserve currency.

The United States is the largest importer of goods and second-largest exporter, though exports per capita are relatively low. In 2010, the total U.S. trade deficit was $635 billion. Canada, China, Mexico, Japan, and Germany are its top trading partners. In 2010, oil was the largest import commodity, while transportation equipment was the country's largest export.

In 2009, the private sector was estimated to constitute 86.4% of the economy, with federal government activity accounting for 4.3% and state and local government activity (including federal transfers) the remaining 9.3%. While its economy has reached a postindustrial level of development and its service sector constitutes 67.8% of GDP, the United States remains an industrial power.

Agriculture accounts for just under 1% of GDP, although the United States is the world's top producer of corn and soybeans. The country is the primary developer and grower of genetically modified food, representing half of the world's biotech crops. In the contiguous 48 states, 35% of the land is used as pasture, 28% is covered by forest, and 21% is agricultural cropland, with all other uses accounting for less than 20%.

Consumer spending comprised 68% of the U.S. economy in 2015. In August 2010, the American labor force consisted of 154.1 million people. With 21.2 million people, government is the leading field of employment. The largest private employment sector is health care and social assistance, with 16.4 million people. About 12% of workers are unionized, compared to 30% in Western Europe. The United States has lost five million manufacturing jobs since 2000. The World Bank ranks the United States first in the ease of hiring and firing workers. The United States is ranked among the top three in the Global Competitiveness Report as well. It has a smaller welfare state and redistributes less income through government action than European nations tend to.

The United States is the only advanced economy that does not guarantee its workers paid vacation and is one of a few countries in the world without paid family leave as a legal right. While federal law does not require sick leave, it is a common benefit for government workers and full-time employees at corporations. 74% of full-time American workers get paid sick leave, according to the Bureau of Labor Statistics, although only 24% of part-time workers get the same benefits. In 2009, the United States had the third-highest workforce productivity per person in the world, behind Luxembourg and Norway. It was fourth in productivity per hour, behind those two countries and the Netherlands.

The 2008–2012 global recession significantly affected the United States, with output still below potential according to the Congressional Budget Office. It brought high unemployment (which has been decreasing but remains above pre-recession levels), along with low consumer confidence, the continuing decline in home values and increase in foreclosures and personal bankruptcies, an escalating federal debt crisis, inflation, and rising petroleum and food prices.

Science and technology
The United States has been a leader in technological innovation since the late 19th century and scientific research since the mid-20th century. Methods for producing interchangeable parts were developed by the U.S. War Department by the Federal Armories during the first half of the 19th century. This technology, along with the establishment of a machine tool industry, enabled the U.S. to have large-scale manufacturing of sewing machines, bicycles, and other items in the late 19th century and became known as the American system of manufacturing. Factory electrification in the early 20th century and introduction of the assembly line and other labor-saving techniques created the system called mass production.

In 1876, Alexander Graham Bell was awarded the first U.S. patent for the telephone. Thomas Edison's research laboratory, one of the first of its kind, developed the phonograph, the first long-lasting light bulb, and the first viable movie camera. The latter led to emergence of the worldwide entertainment industry. In the early 20th century, the automobile companies of Ransom E. Olds and Henry Ford popularized the assembly line. The Wright brothers, in 1903, made the first sustained and controlled heavier-than-air powered flight.

The rise of fascism and Nazism in the 1920s and 1930s led many European scientists, including Albert Einstein, Enrico Fermi, and John von Neumann, to immigrate to the United States. During World War II, the Manhattan Project developed nuclear weapons, ushering in the Atomic Age, while the Space Race produced rapid advances in rocketry, materials science, and aeronautics.

The invention of the transistor in the 1950s, a key active component in practically all modern electronics, led to many technological developments and a significant expansion of the U.S. technology industry. This, in turn, led to the establishment of many new technology companies and regions around the country such as Silicon Valley in California. Advancements by American microprocessor companies such as Advanced Micro Devices (AMD), and Intel along with both computer software and hardware companies that include Adobe Systems, Apple Inc., IBM, Microsoft, and Sun Microsystems created and popularized the personal computer. The ARPANET was developed in the 1960s to meet Defense Department requirements, and became the first of a series of networks which evolved into the Internet.

These advancements then lead to greater personalization of technology for individual use. As of 2013, 83.8% of American households owned at least one computer, and 73.3% had high-speed Internet service. 91% of Americans also own a mobile phone as of May 2013. The United States ranks highly among countries with regard to Internet freedom, although Internet freedom declined since 2016.

In the 21st century, approximately two-thirds of research and development funding comes from the private sector. The United States leads the world in scientific research papers and impact factor.

Income, poverty and wealth
Accounting for 4.24% of the global population, Americans collectively possess 29.4% of the world's total wealth, and Americans make up roughly half of the world's population of millionaires. The Global Food Security Index ranked the U.S. number one for food affordability and overall food security in March 2013. Americans on average have more than twice as much living space per dwelling and per person as European Union residents, and more than every EU nation. For 2017 the United Nations Development Programme ranked the United States 13th among 189 countries in its Human Development Index and 25th among 151 countries in its inequality-adjusted HDI (IHDI).

After years of stagnant growth, in 2016, according to the Census, median household income reached a record high after two consecutive years of record growth, although income inequality remains at record highs with top fifth of earners taking home more than half of all overall income. There has been a widening gap between productivity and median incomes since the 1970s. However, the gap between total compensation and productivity is not as wide because of increased employee benefits such as health insurance. The rise in the share of total annual income received by the top one percent, which has more than doubled from nine percent in 1976 to 20 percent in 2011, has significantly affected income inequality, leaving the United States with one of the widest income distributions among OECD nations. According to a 2018 study by the OECD, the United States has much higher income inequality and a larger percentage of low-income workers than almost any other developed nation. This is largely because at-risk workers get almost no government support and are further set back by a very weak collective bargaining system. The top one percent of income-earners accounted for 52 percent of the income gains from 2009 to 2015, where income is defined as market income excluding government transfers. The extent and relevance of income inequality is a matter of debate. In 2018, U.S. income inequality reached the highest level ever recorded by the Census Bureau.

Wealth, like income and taxes, is highly concentrated; the richest 10% of the adult population possess 72% of the country's household wealth, while the bottom half claim only 2%. According to a September 2017 report by the Federal Reserve, the top 1% controlled 38.6% of the country's wealth in 2016. Between June 2007 and November 2008 the global recession led to falling asset prices around the world. Assets owned by Americans lost about a quarter of their value. Since peaking in the second quarter of 2007, household wealth was down $14 trillion, but has since increased $14 trillion over 2006 levels. At the end of 2014, household debt amounted to $11.8 trillion, down from $13.8 trillion at the end of 2008.

There were about 578,424 sheltered and unsheltered homeless persons in the U.S. in January 2014, with almost two-thirds staying in an emergency shelter or transitional housing program. In 2011 16.7 million children lived in food-insecure households, about 35% more than 2007 levels, though only 1.1% of U.S. children, or 845,000, saw reduced food intake or disrupted eating patterns at some point during the year, and most cases were not chronic. According to a 2014 report by the Census Bureau, one in five young adults lives in poverty, up from one in seven in 1980. As of September 2017, 40 million people, roughly 12.7% of the U.S. population, were living in poverty, with 18.5 million of those living in deep poverty (a family income below one-half of the poverty threshold). In 2016, 13.3 million children were living in poverty, which made up 32.6% of the impoverished population.

In 2017, the region with the lowest poverty rate was New Hampshire (7.3%), and the region with the highest poverty rate was American Samoa (65%). Among the states, the highest poverty rate was in Mississippi (21.9%). According to the UN, around five million people in the U.S. live in "third world" conditions.

Infrastructure
Transportation
Personal transportation is dominated by automobiles, which operate on a network of 4 million miles (6.4 million kilometers) of public roads, including one of the world's longest highway systems at 57,000 mi (91,700 km). The world's second-largest automobile market, the United States has the highest rate of per-capita vehicle ownership in the world, with 765 vehicles per 1,000 Americans (1996). About 40% of personal vehicles are vans, SUVs, or light trucks. The average American adult (accounting for all drivers and non-drivers) spends 55 minutes driving every day, traveling 29 miles (47 km). In 2017, there were 255,009,283 motor vehicles—including cars, vans, buses, freight, and other trucks, but excluding motorcycles and other two-wheelers—or 910 vehicles per 1,000 people.

Mass transit accounts for 9% of total U.S. work trips. Transport of goods by rail is extensive, though relatively low numbers of passengers (approximately 31 million annually) use intercity rail to travel, partly because of the low population density throughout much of the U.S. interior. However, ridership on Amtrak, the national intercity passenger rail system, grew by almost 37% between 2000 and 2010. Also, light rail development has increased in recent years. Bicycle usage for work commutes is minimal.

The civil airline industry is entirely privately owned and has been largely deregulated since 1978, while most major airports are publicly owned. The three largest airlines in the world by passengers carried are U.S.-based; American Airlines is number one after its 2013 acquisition by US Airways. Of the world's 50 busiest passenger airports, 16 are in the United States, including the busiest, Hartsfield–Jackson Atlanta International Airport, the fourth-busiest Los Angeles International Airport, and the sixth-busiest O'Hare International Airport in Chicago. In the aftermath of the 9/11 attacks of 2001, the Transportation Security Administration was created to police airports and commercial airliners.

Energy
The United States energy market is about 29,000 terawatt hours per year. Energy consumption per capita is 7.8 tons (7076 kg) of oil equivalent per year, the 10th-highest rate in the world. In 2005, 40% of this energy came from petroleum, 23% from coal, and 22% from natural gas. The remainder was supplied by nuclear power and renewable energy sources. The United States is the world's largest consumer of petroleum. The United States has 27% of global coal reserves. It is the world's largest producer of natural gas and crude oil.

For decades, nuclear power has played a limited role relative to many other developed countries, in part because of public perception following the Three Mile Island accident in 1979. In 2007, several applications for new nuclear plants were filed.

Since 2007, the total greenhouse gas emissions by the United States are the second highest by country, exceeded only by China. The United States has historically been the world's largest producer of greenhouse gases and greenhouse gas emissions per capita remain high.

It is often assumed that a significant transition from fossil fuels to renewables would be good for the United States, a major oil importer. However, the country remains a leading producer of fossil fuels in its own right, including oil, natural gas and coal. According to the Index of Geopolitical Gains and Losses After Energy Transition (GeGaLo), the United States ranks low (110th out of 156) among nations that would gain considerable advantages from a marked transition to renewables.

Water supply and sanitation
Issues that affect water supply in the United States include droughts in the West, water scarcity, pollution, a backlog of investment, concerns about the affordability of water for the poorest, and a rapidly retiring workforce. Increased variability and intensity of rainfall as a result of climate change is expected to produce both more severe droughts and flooding, with potentially serious consequences for water supply and for pollution from combined sewer overflows.

Culture
The United States is home to many cultures and a wide variety of ethnic groups, traditions, and values. Aside from the Native American, Native Hawaiian, and Native Alaskan populations, nearly all Americans or their ancestors settled or immigrated within the past five centuries. Mainstream American culture is a Western culture largely derived from the traditions of European immigrants with influences from many other sources, such as traditions brought by slaves from Africa. More recent immigration from Asia and especially Latin America has added to a cultural mix that has been described as both a homogenizing melting pot, and a heterogeneous salad bowl in which immigrants and their descendants retain distinctive cultural characteristics.

Core American culture was established by Protestant British colonists and shaped by the frontier settlement process, with the traits derived passed down to descendants and transmitted to immigrants through assimilation. Americans have traditionally been characterized by a strong work ethic, competitiveness, and individualism, as well as a unifying belief in an "American creed" emphasizing liberty, equality, private property, democracy, rule of law, and a preference for limited government. Americans are extremely charitable by global standards. According to a 2006 British study, Americans gave 1.67% of GDP to charity, more than any other nation studied, more than twice the second place British figure of 0.73%, and around twelve times the French figure of 0.14%.

The American Dream, or the perception that Americans enjoy high social mobility, plays a key role in attracting immigrants. Whether this perception is realistic has been a topic of debate. While mainstream culture holds that the United States is a classless society, scholars identify significant differences between the country's social classes, affecting socialization, language, and values. Americans' self-images, social viewpoints, and cultural expectations are associated with their occupations to an unusually close degree. While Americans tend greatly to value socioeconomic achievement, being ordinary or average is generally seen as a positive attribute.

Food
Mainstream American cuisine is similar to that in other Western countries. Wheat is the primary cereal grain with about three-quarters of grain products made of wheat flour and many dishes use indigenous ingredients, such as turkey, venison, potatoes, sweet potatoes, corn, squash, and maple syrup which were consumed by Native Americans and early European settlers. These homegrown foods are part of a shared national menu on one of America's most popular holidays, Thanksgiving, when some Americans make traditional foods to celebrate the occasion.

Characteristic dishes such as apple pie, fried chicken, pizza, hamburgers, and hot dogs derive from the recipes of various immigrants. French fries, Mexican dishes such as burritos and tacos, and pasta dishes freely adapted from Italian sources are widely consumed. Americans drink three times as much coffee as tea. Marketing by U.S. industries is largely responsible for making orange juice and milk ubiquitous breakfast beverages.

American eating habits owe a great deal to that of their British culinary roots with some variations. Although American lands could grow newer vegetables that Britain could not, most colonists would not eat these new foods until accepted by Europeans. Over time American foods changed to a point that food critic, John L. Hess stated in 1972: "Our founding fathers were as far superior to our present political leaders in the quality of their food as they were in the quality of their prose and intelligence".

The American fast food industry, the world's largest, pioneered the drive-through format in the 1940s. Fast food consumption has sparked health concerns. During the 1980s and 1990s, Americans' caloric intake rose 24%; frequent dining at fast food outlets is associated with what public health officials call the American "obesity epidemic". Highly sweetened soft drinks are widely popular, and sugared beverages account for nine percent of American caloric intake.

Literature, philosophy, and visual art
In the 18th and early 19th centuries, American art and literature took most of its cues from Europe. Writers such as Washington Irving, Nathaniel Hawthorne, Edgar Allan Poe, and Henry David Thoreau established a distinctive American literary voice by the middle of the 19th century. Mark Twain and poet Walt Whitman were major figures in the century's second half; Emily Dickinson, virtually unknown during her lifetime, is now recognized as an essential American poet. A work seen as capturing fundamental aspects of the national experience and character—such as Herman Melville's Moby-Dick (1851), Twain's The Adventures of Huckleberry Finn (1885), F. Scott Fitzgerald's The Great Gatsby (1925) and Harper Lee's To Kill a Mockingbird (1960)—may be dubbed the "Great American Novel".

Twelve U.S. citizens have won the Nobel Prize in Literature, most recently Bob Dylan in 2016. William Faulkner, Ernest Hemingway and John Steinbeck are often named among the most influential writers of the 20th century. Popular literary genres such as the Western and hardboiled crime fiction developed in the United States. The Beat Generation writers opened up new literary approaches, as have postmodernist authors such as John Barth, Thomas Pynchon, and Don DeLillo.

The transcendentalists, led by Thoreau and Ralph Waldo Emerson, established the first major American philosophical movement. After the Civil War, Charles Sanders Peirce and then William James and John Dewey were leaders in the development of pragmatism. In the 20th century, the work of W. V. O. Quine and Richard Rorty, and later Noam Chomsky, brought analytic philosophy to the fore of American philosophical academia. John Rawls and Robert Nozick led a revival of political philosophy, and Martha Nussbaum is its most important figure today. Cornel West and Judith Butler have led a continental tradition in American philosophical academia. Chicago school economists like Milton Friedman, James M. Buchanan, and Thomas Sowell have affected various fields in social and political philosophy.

In the visual arts, the Hudson River School was a mid-19th-century movement in the tradition of European naturalism. The realist paintings of Thomas Eakins are now widely celebrated. The 1913 Armory Show in New York City, an exhibition of European modernist art, shocked the public and transformed the U.S. art scene. Georgia O'Keeffe, Marsden Hartley, and others experimented with new, individualistic styles. Major artistic movements such as the abstract expressionism of Jackson Pollock and Willem de Kooning and the pop art of Andy Warhol and Roy Lichtenstein developed largely in the United States. The tide of modernism and then postmodernism has brought fame to American architects such as Frank Lloyd Wright, Philip Johnson, and Frank Gehry. Americans have long been important in the modern artistic medium of photography, with major photographers including Alfred Stieglitz, Edward Steichen, Edward Weston, and Ansel Adams.

One of the first major promoters of American theater was impresario P. T. Barnum, who began operating a lower Manhattan entertainment complex in 1841. The team of Harrigan and Hart produced a series of popular musical comedies in New York starting in the late 1870s. In the 20th century, the modern musical form emerged on Broadway; the songs of musical theater composers such as Irving Berlin, Cole Porter, George and Ira Gershwin, and Stephen Sondheim have become pop standards. Playwright Eugene O'Neill won the Nobel literature prize in 1936; other acclaimed U.S. dramatists include multiple Pulitzer Prize winners Tennessee Williams, Edward Albee, and August Wilson.

Choreographers Isadora Duncan and Martha Graham helped create modern dance, while George Balanchine and Jerome Robbins were leaders in 20th-century ballet.

Music
Although little known at the time, Charles Ives's work of the 1910s established him as the first major U.S. composer in the classical tradition, while experimentalists such as Henry Cowell and John Cage created a distinctive American approach to classical composition. Aaron Copland and George Gershwin developed a new synthesis of popular and classical music.

The rhythmic and lyrical styles of African-American music have deeply influenced American music at large, distinguishing it from European and African traditions. Elements from folk idioms such as the blues and what is now known as old-time music were adopted and transformed into popular genres with global audiences. Jazz was developed by innovators such as Louis Armstrong and Duke Ellington early in the 20th century. Country music developed in the 1920s, and rhythm and blues in the 1940s.

Elvis Presley and Chuck Berry were among the mid-1950s pioneers of rock and roll. Rock bands such as Metallica, the Eagles, and Aerosmith are among the highest grossing in worldwide sales. In the 1960s, Bob Dylan emerged from the folk revival to become one of America's most celebrated songwriters and James Brown led the development of funk.

More recent American creations include hip hop and house music. American pop stars such as Elvis Presley, Michael Jackson, and Madonna have become global celebrities, as have contemporary musical artists such as Taylor Swift, Britney Spears, Katy Perry, Beyoncé, Jay-Z, Eminem, Kanye West, and Ariana Grande.

Cinema
Hollywood, a northern district of Los Angeles, California, is one of the leaders in motion picture production. The world's first commercial motion picture exhibition was given in New York City in 1894, using Thomas Edison's Kinetoscope. The next year saw the first commercial screening of a projected film, also in New York, and the United States was in the forefront of sound film's development in the following decades. Since the early 20th century, the U.S. film industry has largely been based in and around Hollywood, although in the 21st century an increasing number of films are not made there, and film companies have been subject to the forces of globalization.

Director D. W. Griffith, the top American filmmaker during the silent film period, was central to the development of film grammar, and producer/entrepreneur Walt Disney was a leader in both animated film and movie merchandising. Directors such as John Ford redefined the image of the American Old West and history, and, like others such as John Huston, broadened the possibilities of cinema with location shooting, with great influence on subsequent directors. The industry enjoyed its golden years, in what is commonly referred to as the "Golden Age of Hollywood", from the early sound period until the early 1960s, with screen actors such as John Wayne and Marilyn Monroe becoming iconic figures. In the 1970s, film directors such as Martin Scorsese, Francis Ford Coppola and Robert Altman were a vital component in what became known as "New Hollywood" or the "Hollywood Renaissance", grittier films influenced by French and Italian realist pictures of the post-war period. Since, directors such as Steven Spielberg, George Lucas and James Cameron have gained renown for their blockbuster films, often characterized by high production costs, and in return, high earnings at the box office, with the Russo brothers, Avengers: Endgame (2019) being the highest-grossing film of all time.

Notable films topping the American Film Institute's AFI 100 list include Orson Welles's Citizen Kane (1941), which is frequently cited as the greatest film of all time, Casablanca (1942), The Godfather (1972), Gone with the Wind (1939), Lawrence of Arabia (1962), The Wizard of Oz (1939), The Graduate (1967), On the Waterfront (1954), Schindler's List (1993), Singin' in the Rain (1952), It's a Wonderful Life (1946) and Sunset Boulevard (1950). The Academy Awards, popularly known as the Oscars, have been held annually by the Academy of Motion Picture Arts and Sciences since 1929, and the Golden Globe Awards have been held annually since January 1944.

Sports
American football is by several measures the most popular spectator sport; the National Football League (NFL) has the highest average attendance of any sports league in the world, and the Super Bowl is watched by millions globally. Baseball has been regarded as the U.S. national sport since the late 19th century, with Major League Baseball (MLB) being the top league. Basketball and ice hockey are the country's next two leading professional team sports, with the top leagues being the National Basketball Association (NBA) and the National Hockey League (NHL). These four major sports, when played professionally, each occupy a season at different but overlapping, times of the year. College football and basketball attract large audiences. In soccer, the country hosted the 1994 FIFA World Cup, the men's national soccer team qualified for ten World Cups and the women's team has won the FIFA Women's World Cup four times; Major League Soccer is the sport's highest league in the United States (featuring 23 American and three Canadian teams). The market for professional sports in the United States is roughly $69 billion, roughly 50% larger than that of all of Europe, the Middle East, and Africa combined.

Eight Olympic Games have taken place in the United States (2028 Summer Olympics will mark the ninth time). The 1904 Summer Olympics in St. Louis, Missouri were the first ever Olympic Games held outside of Europe. As of 2017, the United States has won 2,522 medals at the Summer Olympic Games, more than any other country, and 305 in the Winter Olympic Games, the second most behind Norway.While most major U.S. sports such as baseball and American football have evolved out of European practices, basketball, volleyball, skateboarding, and snowboarding are American inventions, some of which have become popular worldwide. Lacrosse and surfing arose from Native American and Native Hawaiian activities that predate Western contact. The most watched individual sports are golf and auto racing, particularly NASCAR. Rugby union is considered the fastest growing sport in the U.S., with registered players, numbered at 115,000+ and a further 1.2 million participants.

Mass media
The four major broadcasters in the U.S. are the National Broadcasting Company (NBC), Columbia Broadcasting System (CBS), American Broadcasting Company (ABC), and Fox Broadcasting Company (FOX). The four major broadcast television networks are all commercial entities. Cable television offers hundreds of channels catering to a variety of niches. Americans listen to radio programming, also largely commercial, on average just over two-and-a-half hours a day.

In 1998, the number of U.S. commercial radio stations had grown to 4,793 AM stations and 5,662 FM stations. In addition, there are 1,460 public radio stations. Most of these stations are run by universities and public authorities for educational purposes and are financed by public or private funds, subscriptions, and corporate underwriting. Much public-radio broadcasting is supplied by NPR (formerly National Public Radio). NPR was incorporated in February 1970 under the Public Broadcasting Act of 1967; its television counterpart, PBS, was also created by the same legislation (NPR and PBS are operated separately from each other). As of September 30, 2014, there are 15,433 licensed full-power radio stations in the U.S. according to the U.S. Federal Communications Commission (FCC).

Well-known newspapers include The Wall Street Journal, The New York Times, and USA Today. Although the cost of publishing has increased over the years, the price of newspapers has generally remained low, forcing newspapers to rely more on advertising revenue and on articles provided by a major wire service, such as the Associated Press or Reuters, for their national and world coverage. With very few exceptions, all the newspapers in the U.S. are privately owned, either by large chains such as Gannett or McClatchy, which own dozens or even hundreds of newspapers; by small chains that own a handful of papers; or in a situation that is increasingly rare, by individuals or families. Major cities often have "alternative weeklies" to complement the mainstream daily papers, for example, New York City's The Village Voice or Los Angeles' LA Weekly, to name two of the best-known. Major cities may also support a local business journal, trade papers relating to local industries, and papers for local ethnic and social groups. Early versions of the American newspaper comic strip and the American comic book began appearing in the 19th century. In 1938, Superman, the comic book superhero of DC Comics, developed into an American icon. Aside from web portals and search engines, the most popular websites are Facebook, YouTube, Wikipedia, Yahoo!, eBay, Amazon, and Twitter.

More than 800 publications are produced in Spanish, the second most commonly used language in the United States behind English.
